// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract FunctionsAndErrors {
    address public owner;
    uint256 public balance = 50;
    uint256 public age;

    constructor(uint256 _age) {
        require(_age > 0, "Age must be greater than 0");
        owner = msg.sender;
        age = _age;
    }

    function deposit() public payable {
        require(msg.value > 0, "Deposit amount should be greater than 0");

        balance += msg.value;
    }

    function withdraw(uint256 amount) public {
        assert(amount <= balance);

        require(msg.sender == owner, "Only the contract owner can withdraw");
        require(amount > 0, "Withdrawal amount should be greater than 0");

        balance -= amount;

        revert("Withdrawal successful, but custom error message");
    }

    function checkBalance() public view returns (uint256) {
        require(msg.sender == owner, "Only the contract owner can check the balance");
        return balance;
    }

    function isAdult() public view returns (bool) {
        return age >= 18;
    }

    function setAge(uint256 _age) public {
        require(msg.sender == owner, "Only the contract owner can set the age");
        require(_age > 0, "Age must be greater than 0");
        age = _age;
    }
}
